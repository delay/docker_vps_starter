version: '3'
services:
    posthog_db:
        container_name: posthog_db
        environment:
            POSTGRES_DB: posthog
            POSTGRES_PASSWORD: posthog
            POSTGRES_USER: posthog
        image: postgres:13-alpine
        restart: always
        networks:
            - posthog_docker_backend
        volumes:
            - postgres-data:/var/lib/postgresql/data
    posthog_redis:
        container_name: posthog_redis
        image: redis:6-alpine
        restart: always
        networks:
            - posthog_docker_backend
    posthogweb:
        restart: always
        container_name: posthog_web
        depends_on:
            - posthog_db
            - posthog_redis
        environment:
            DATABASE_URL: postgres://posthog:posthog@posthog_db:5432/posthog
            IS_DOCKER: 'true'
            IS_BEHIND_PROXY: 'true'
            REDIS_URL: redis://posthog_redis:6379/
            SECRET_KEY: ${SECRET_KEY}
            DEBUG: 0
            SITE_URL: https://${DOMAIN}
        image: posthog/posthog:latest
        networks:
            - posthog_docker_backend
            - traefik_network
        links:
            - posthog_db:posthog_db
            - posthog_redis:posthog_redis
        ports:
            - ${PORT}:8000
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.posthogweb.entrypoints=http"
            - "traefik.http.routers.posthogweb.rule=Host(`${DOMAIN}`)"
            - "traefik.http.middlewares.posthogweb-https-redirect.redirectscheme.scheme=https"
            - "traefik.http.routers.posthogweb.middlewares=posthogweb-https-redirect"
            - "traefik.http.routers.posthogweb-secure.entrypoints=https"
            - "traefik.http.routers.posthogweb-secure.rule=Host(`${DOMAIN}`)"
            - "traefik.http.routers.posthogweb-secure.tls=true"
            - "traefik.http.routers.posthogweb-secure.tls.certresolver=http"
            - "traefik.http.routers.posthogweb-secure.service=posthogweb"
            - "traefik.http.services.posthogweb.loadbalancer.server.port=8000"
            - "traefik.docker.network=traefik_network"
      
volumes:
    postgres-data:

networks:
    posthog_docker_backend:
    traefik_network:
        external: true
